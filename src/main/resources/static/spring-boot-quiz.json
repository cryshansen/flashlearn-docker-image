[
  {"topic":"Spring Boot Core","question":"What does the @SpringBootApplication annotation do?","answer":"Marks the main class as a Spring Boot app, enables auto-configuration and component scanning.","difficulty":"Easy","color":"#FFD700"},
  {"topic":"Spring Boot Core","question":"What is ApplicationContext in Spring?","answer":"The container that manages all beans and provides dependency injection at runtime.","difficulty":"Easy","color":"#1E90FF"},
  {"topic":"Spring Boot Core","question":"How are beans detected automatically in Spring Boot?","answer":"Spring scans packages for @Component, @Service, @Repository, @Controller, @Configuration annotations.","difficulty":"Easy","color":"#FFA500"},
  {"topic":"Spring Boot Core","question":"What triggers a controller method in Spring Boot?","answer":"DispatcherServlet receives the request and routes it to the appropriate controller based on URL mapping.","difficulty":"Medium","color":"#FF69B4"},
  {"topic":"Spring Boot Core","question":"What is the role of @Autowired?","answer":"Injects dependencies automatically into Spring-managed beans via field, constructor, or setter injection.","difficulty":"Easy","color":"#32CD32"},
  {"topic":"Spring Boot Core","question":"What is the difference between @Controller and @RestController?","answer":"@Controller returns views/templates, @RestController returns JSON responses automatically.","difficulty":"Easy","color":"#3CB371"},
  {"topic":"Spring Boot Core","question":"What is the purpose of @ConfigurationProperties?","answer":"Binds hierarchical properties from YAML or properties files into a structured bean.","difficulty":"Medium","color":"#00CED1"},
  {"topic":"Spring Boot Core","question":"What are the main layers of a Spring Boot application?","answer":"Controller → Service → Repository → Configuration.","difficulty":"Easy","color":"#FF1493"},
  {"topic":"Spring Boot Lifecycle","question":"What is the sequence when a POST request hits a Spring Boot endpoint?","answer":"DispatcherServlet → Controller → Service → Repository/External API → Response returned.","difficulty":"Hard","color":"#DC143C"},
  {"topic":"Spring Security","question":"What happens if spring-boot-starter-security is on the classpath without defining a user?","answer":"Spring Boot generates a random password and enables HTTP Basic authentication by default.","difficulty":"Medium","color":"#FF6347"},
  {"topic":"Spring Security","question":"How can you disable security for all endpoints?","answer":"Create a SecurityConfig bean, disable CSRF, formLogin, httpBasic, and permitAll requests.","difficulty":"Medium","color":"#FF4500"},
  {"topic":"Spring Security","question":"Why did we add a dummy UserDetailsService?","answer":"To prevent Spring Boot from generating a random password while keeping the security dependency.","difficulty":"Medium","color":"#20B2AA"},
  {"topic":"Spring Security","question":"What does CSRF stand for and why is it disabled for APIs?","answer":"Cross-Site Request Forgery; disabled to allow POST requests from clients like Postman.","difficulty":"Medium","color":"#FF8C00"},
  {"topic":"Repository Layer","question":"What annotation marks a repository bean?","answer":"@Repository","difficulty":"Easy","color":"#9932CC"},
  {"topic":"Repository Layer","question":"Why did StudySessionRepository fail to inject initially?","answer":"It wasn't a Spring-managed bean; missing @Repository or @Component annotation.","difficulty":"Medium","color":"#8A2BE2"},
  {"topic":"Repository Layer","question":"What does saveAll() do in a repository?","answer":"Persists a list of entities into the database.","difficulty":"Easy","color":"#32CD32"},
  {"topic":"Repository Layer","question":"How do you inject a repository into a service?","answer":"Use @Autowired on the field or constructor parameter.","difficulty":"Easy","color":"#3CB371"},
  {"topic":"Service Layer","question":"What is the role of a Service in Spring Boot?","answer":"Contains business logic, orchestrates calls to repositories or external APIs.","difficulty":"Easy","color":"#00BFFF"},
  {"topic":"Service Layer","question":"Why use constructor injection over field injection?","answer":"Constructor injection allows for immutable dependencies and easier testing.","difficulty":"Medium","color":"#1E90FF"},
  {"topic":"Service Layer","question":"How do you handle API calls in a service?","answer":"Use HTTP clients like OkHttpClient or RestTemplate to send requests and process responses.","difficulty":"Medium","color":"#00CED1"},
  {"topic":"DTO","question":"What is a DTO (Data Transfer Object)?","answer":"An object used to transfer data between layers without exposing internal entities.","difficulty":"Easy","color":"#FF1493"},
  {"topic":"DTO","question":"Why return DTOs instead of entities from a controller?","answer":"To encapsulate data, prevent overexposure, and structure the API response cleanly.","difficulty":"Medium","color":"#FF69B4"},
  {"topic":"OpenAI Integration","question":"Where is the OpenAI API key stored in Spring Boot?","answer":"In application.yml under openai.apiKey or using an environment variable.","difficulty":"Easy","color":"#FFD700"},
  {"topic":"OpenAI Integration","question":"How do you inject OpenAI configuration into a service?","answer":"Using @ConfigurationProperties to bind openai settings to a bean like OpenAiConfig.","difficulty":"Medium","color":"#00CED1"},
  {"topic":"OpenAI Integration","question":"What model do we use for chat prompts?","answer":"chatModel from OpenAiConfig, e.g., gpt-4o-mini.","difficulty":"Easy","color":"#1E90FF"},
  {"topic":"OpenAI Integration","question":"What model do we use for TTS?","answer":"ttsModel from OpenAiConfig, e.g., gpt-4o-mini-tts.","difficulty":"Easy","color":"#00BFFF"},
  {"topic":"OpenAI Integration","question":"How is a POST request to OpenAI API structured?","answer":"Send JSON with model, messages array, and Authorization header containing the API key.","difficulty":"Medium","color":"#00CED1"},
  {"topic":"TTS Service","question":"How are multiple TTS providers handled dynamically?","answer":"Store provider info in a map and fetch the correct bean from ApplicationContext.","difficulty":"Medium","color":"#8A2BE2"},
  {"topic":"TTS Service","question":"Why check subscription tier before using a TTS provider?","answer":"To enforce user access rights and control usage of premium providers.","difficulty":"Easy","color":"#FF6347"},
  {"topic":"TTS Service","question":"How do you return audio bytes from a Spring controller?","answer":"Use ResponseEntity with MediaType.APPLICATION_OCTET_STREAM and headers for content disposition.","difficulty":"Medium","color":"#FF4500"},
  {"topic":"TTS Service","question":"What headers are needed for inline audio playback?","answer":"Content-Disposition: inline; filename=output.mp3, Content-Type: audio/mpeg","difficulty":"Easy","color":"#FF8C00"},
  {"topic":"HTTP & REST","question":"What does @RequestBody do?","answer":"Binds the HTTP request body to a Java object.","difficulty":"Easy","color":"#32CD32"},
  {"topic":"HTTP & REST","question":"What does @PathVariable do?","answer":"Extracts a variable from the URL path and passes it to the method parameter.","difficulty":"Easy","color":"#3CB371"},
  {"topic":"HTTP & REST","question":"What does @PostMapping indicate?","answer":"Maps HTTP POST requests to a specific controller method.","difficulty":"Easy","color":"#00BFFF"},
  {"topic":"HTTP & REST","question":"Why disable CSRF for APIs?","answer":"To allow POST requests from external clients like Postman without requiring a CSRF token.","difficulty":"Medium","color":"#1E90FF"},
  {"topic":"Java Core","question":"What is the difference between interface and class?","answer":"An interface defines methods without implementation; a class provides implementation.","difficulty":"Easy","color":"#FFD700"},
  {"topic":"Java Core","question":"What is the purpose of encapsulation?","answer":"Hide internal state and expose behavior through methods.","difficulty":"Easy","color":"#32CD32"},
  {"topic":"Java Core","question":"Why use immutable objects for configuration?","answer":"To prevent changes after initialization and improve thread safety.","difficulty":"Medium","color":"#00CED1"},
  {"topic":"Java Core","question":"What is the use of List.of() in Java?","answer":"Creates an immutable list with the given elements.","difficulty":"Easy","color":"#FF69B4"},
  {"topic":"Java Core","question":"What is the difference between field, setter, and constructor injection?","answer":"Field injection injects directly into the field, setter uses a setter method, constructor requires the dependency on object creation.","difficulty":"Medium","color":"#1E90FF"},
  {"topic":"Java Core","question":"What is the purpose of try-with-resources?","answer":"Automatically closes resources like streams or HTTP connections.","difficulty":"Medium","color":"#00BFFF"},
  {"topic":"Error Handling","question":"What happens if a repository bean is not found?","answer":"Spring throws UnsatisfiedDependencyException during context initialization.","difficulty":"Medium","color":"#FF4500"},
  {"topic":"Error Handling","question":"How do you catch API call failures?","answer":"Wrap calls in try-catch and throw RuntimeException or handle gracefully.","difficulty":"Medium","color":"#FF6347"},
  {"topic":"Error Handling","question":"Why is ResponseEntity useful?","answer":"It allows control over HTTP status, headers, and body in responses.","difficulty":"Easy","color":"#FF8C00"},
  {"topic":"DTO","question":"How are DTOs typically used in Spring Boot applications?","answer":"DTOs are used to transfer data between layers, often from services to controllers, without exposing internal entity structure.","difficulty":"Easy","color":"#FF1493"}
]
