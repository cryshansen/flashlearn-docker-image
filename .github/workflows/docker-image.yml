name: Docker CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      # These env vars are available to all steps in this job
      SPRING_MAIL_HOST: flashlearn-mailhog
      SPRING_MAIL_PORT: 1025
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/flashlearn
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build Docker image
      - name: Build Docker image
        run: docker build -t flashlearn-app:ci .

      # Step 5: Start Mailhog container
      - name: Start Mailhog
        run: docker run -d --name flashlearn-mailhog -p 1025:1025 -p 8025:8025 mailhog/mailhog

      # Step 6: Run Spring Boot container
      - name: Run Spring Boot app
        run: |
          docker run -d \
            --name flashlearn-app-ci \
            -p 8080:8080 \
            -e SPRING_MAIL_HOST=$SPRING_MAIL_HOST \
            -e SPRING_MAIL_PORT=$SPRING_MAIL_PORT \
            -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL \
            -e SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME \
            -e SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD \
            flashlearn-app:ci

      # Step 7: Wait for app to start
      - name: Wait for Spring Boot
        run: |
          echo "Waiting for app to be ready..."
          for i in {1..15}; do
            if curl -s http://localhost:8080/hello; then
              echo "App is ready!"
              break
            fi
            echo "Waiting..."
            sleep 2
          done

      # Step 8: Run tests inside container
      - name: Run Tests
        run: |
          echo "Listing running containers:"
          docker ps
          CONTAINER_ID=$(docker ps -q -f name=flashlearn-app-ci)
          if [ -z "$CONTAINER_ID" ]; then
            echo "❌ No running container found named flashlearn-app-ci"
            docker logs flashlearn-app-ci || echo "No logs found for flashlearn-app-ci"
            exit 1
          fi

          echo "✅ Running tests in container: $CONTAINER_ID"
          docker exec \
            -e SPRING_MAIL_HOST=$SPRING_MAIL_HOST \
            -e SPRING_MAIL_PORT=$SPRING_MAIL_PORT \
            -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL \
            -e SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME \
            -e SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD \
            $CONTAINER_ID ./mvnw test || mvn test
