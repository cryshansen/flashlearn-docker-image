{
  "session" : "react",
  "flashcards" : [ {
    "difficulty" : "easy",
    "question" : "What is a React component?",
    "answer" : "A <strong>function</strong> or <strong>class</strong> that <u>returns</u> <code>JSX</code> to <u>describe</u> what should <u>appear</u> on the <strong>screen</strong>.",
    "color" : "success",
    "topic" : "Components",
    "answer_audio_path" : "audio/1/161_answer.mp3",
    "question_audio_path" : "audio/1/161_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "What is the difference between a functional and class component?",
    "answer" : "<strong>Functional components</strong> are <strong>stateless</strong> (until <code>Hooks</code>), while <strong>class components</strong> have <strong>lifecycle methods</strong> and <code>this</code> context.",
    "color" : "warning",
    "topic" : "Components",
    "answer_audio_path" : "audio/1/162_answer.mp3",
    "question_audio_path" : "audio/1/162_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "What is JSX?",
    "answer" : "<code>JSX</code> stands for <strong>JavaScript XML</strong>. It <u>allows</u> writing <strong>HTML-like syntax</strong> inside <strong>JavaScript code</strong>.",
    "color" : "success",
    "topic" : "JSX",
    "answer_audio_path" : "audio/1/163_answer.mp3",
    "question_audio_path" : "audio/1/163_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "What are props in React?",
    "answer" : "<strong>Props</strong> are <strong>inputs</strong> to <strong>components</strong> that are <u>passed</u> down from <strong>parent</strong> to <strong>child</strong> and are <strong>read-only</strong>.",
    "color" : "success",
    "topic" : "Props",
    "answer_audio_path" : "audio/1/164_answer.mp3",
    "question_audio_path" : "audio/1/164_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "What is state in React?",
    "answer" : "<strong>State</strong> is a built-in <strong>object</strong> <u>used</u> to <u>contain</u> <strong>data</strong> about the <strong>component</strong> that can <u>change</u> over time.",
    "color" : "success",
    "topic" : "State",
    "answer_audio_path" : "audio/1/165_answer.mp3",
    "question_audio_path" : "audio/1/165_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "How do you update state in a class component?",
    "answer" : "By <u>using</u> <code>this.setState({ key: value })</code>.",
    "color" : "warning",
    "topic" : "State",
    "answer_audio_path" : "audio/1/166_answer.mp3",
    "question_audio_path" : "audio/1/166_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "What is the useState hook?",
    "answer" : "It <u>allows</u> you to <u>add</u> <strong>state</strong> to <strong>functional components</strong>. <code>const [count, setCount] = useState(0);</code>",
    "color" : "success",
    "topic" : "Hooks",
    "answer_audio_path" : "audio/1/167_answer.mp3",
    "question_audio_path" : "audio/1/167_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "What is the useEffect hook?",
    "answer" : "It <u>performs</u> <strong>side effects</strong> in <strong>functional components</strong> (e.g., <u>fetching</u> data, <u>subscribing</u> to events).",
    "color" : "warning",
    "topic" : "Hooks",
    "answer_audio_path" : "audio/1/168_answer.mp3",
    "question_audio_path" : "audio/1/168_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "How do you run useEffect only once?",
    "answer" : "<u>Pass</u> an <strong>empty dependency array</strong>: <code>useEffect(() => { ... }, [])</code>",
    "color" : "warning",
    "topic" : "Hooks",
    "answer_audio_path" : "audio/1/169_answer.mp3",
    "question_audio_path" : "audio/1/169_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "How do you handle a click event in React?",
    "answer" : "<u>Attach</u> an <strong>event handler</strong> like <code>onClick={() => handleClick()}</code> in <code>JSX</code>.",
    "color" : "success",
    "topic" : "Events",
    "answer_audio_path" : "audio/1/170_answer.mp3",
    "question_audio_path" : "audio/1/170_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "How do you handle form input in React?",
    "answer" : "<u>Use</u> <code>useState</code> to <u>track</u> <strong>input value</strong> and <u>update</u> onChange: <code>&lt;input value={value} onChange={e =&gt; setValue(e.target.value)} /&gt;</code>",
    "color" : "warning",
    "topic" : "Forms",
    "answer_audio_path" : "audio/1/171_answer.mp3",
    "question_audio_path" : "audio/1/171_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "What is componentDidMount?",
    "answer" : "A <strong>lifecycle method</strong> in <strong>class components</strong> that <u>runs</u> after the <strong>component</strong> is <u>mounted</u> to the <strong>DOM</strong>.",
    "color" : "warning",
    "topic" : "Lifecycle",
    "answer_audio_path" : "audio/1/172_answer.mp3",
    "question_audio_path" : "audio/1/172_question.mp3"
  }, {
    "difficulty" : "easy",
    "question" : "What is conditional rendering?",
    "answer" : "<u>Render</u> different <strong>UI</strong> based on <strong>conditions</strong> using a <code>ternary operator</code>, <code>if</code>, or logical <code>&&</code>.",
    "color" : "success",
    "topic" : "Rendering",
    "answer_audio_path" : "audio/1/173_answer.mp3",
    "question_audio_path" : "audio/1/173_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "Why is `key` important in a list?",
    "answer" : "<strong>Keys</strong> <u>help</u> React <u>identify</u> which <strong>items</strong> <u>changed</u>, were <u>added</u>, or <u>removed</u> for efficient <strong>updating</strong>.",
    "color" : "warning",
    "topic" : "Lists & Keys",
    "answer_audio_path" : "audio/1/174_answer.mp3",
    "question_audio_path" : "audio/1/174_question.mp3"
  }, {
    "difficulty" : "hard",
    "question" : "What is React.memo?",
    "answer" : "<code>React.memo</code> is a <strong>higher-order component</strong> that <u>prevents</u> unnecessary <strong>re-renders</strong> if <strong>props</strong> haven't <u>changed</u>.",
    "color" : "danger",
    "topic" : "Optimization",
    "answer_audio_path" : "audio/1/175_answer.mp3",
    "question_audio_path" : "audio/1/175_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "What is React Router?",
    "answer" : "A <strong>library</strong> <u>used</u> to <u>enable</u> <strong>navigation</strong> and <strong>routing</strong> in React applications.",
    "color" : "warning",
    "topic" : "Routing",
    "answer_audio_path" : "audio/1/176_answer.mp3",
    "question_audio_path" : "audio/1/176_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "How do you navigate between pages with React Router?",
    "answer" : "<u>Use</u> <code>&lt;Link to='/about'&gt;About&lt;/Link&gt;</code> or the <code>useNavigate()</code> hook for <strong>programmatic navigation</strong>.",
    "color" : "warning",
    "topic" : "Routing",
    "answer_audio_path" : "audio/1/177_answer.mp3",
    "question_audio_path" : "audio/1/177_question.mp3"
  }, {
    "difficulty" : "hard",
    "question" : "What is the Context API?",
    "answer" : "It <u>provides</u> a way to <u>pass</u> <strong>data</strong> through the <strong>component tree</strong> without <strong>props drilling</strong>.",
    "color" : "danger",
    "topic" : "Context",
    "answer_audio_path" : "audio/1/178_answer.mp3",
    "question_audio_path" : "audio/1/178_question.mp3"
  }, {
    "difficulty" : "medium",
    "question" : "How do you consume context in a functional component?",
    "answer" : "By <u>using</u> the <code>useContext(MyContext)</code> <strong>hook</strong>.",
    "color" : "warning",
    "topic" : "Context",
    "answer_audio_path" : "audio/1/179_answer.mp3",
    "question_audio_path" : "audio/1/179_question.mp3"
  }, {
    "difficulty" : "hard",
    "question" : "What is a custom hook?",
    "answer" : "A <strong>reusable function</strong> that <u>uses</u> built-in <strong>hooks</strong> and <u>encapsulates</u> shared <strong>logic</strong> across <strong>components</strong>.",
    "color" : "danger",
    "topic" : "Advanced",
    "answer_audio_path" : "audio/1/180_answer.mp3",
    "question_audio_path" : "audio/1/180_question.mp3"
  } ]
}